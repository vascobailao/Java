package calc.core;

import pt.utl.ist.po.ui.Command;
import pt.utl.ist.po.ui.Menu;
import pt.utl.ist.po.ui.Display;
import pt.utl.ist.po.ui.InputString;

import java.io.Serializable;



public class Matriz implements Serializable {
	private static final long serialVersion=12345673456432L;
	
	private int linhas;
	private int colunas;
	private Cell[][] matriz;
	
	
	public Matriz(int linhas, int colunas){
		this.linhas = linhas;
		this.colunas = colunas;
		this.matriz = new Cell[linhas+1][colunas+1];
		int i,j;
		for (i=0; i<=this.linhas; i++){
			for (j=0; j<=this.colunas; j++)
				this.matriz[i][j] = new Cell(i,j);
		}
	}
	
	public Matriz(){
		this.matriz = null;
	}
	
	public int getLimitesLinhas(){
		return this.linhas;
	}
	
	public int getLimitesColunas(){
		return this.colunas;
	}
    
  public Matriz newMatriz(int linhas, int colunas){
  	Matriz m = new Matriz(linhas,colunas);
    return m;
    }
    
	public Cell getCelula(int l, int c){
			return this.matriz[l][c];
	}
	
	public void insereContent(int l, int c, Content content){
		this.matriz[l][c].insereConteudo(content);
	}
	
	
	public void insereCell(int l,int c, Content content){
		this.matriz[l][c].insereConteudo(content);
	}
	
	public void removeCell(int l, int c){
		this.matriz[l][c].eliminaConteudo();
		}
		
	public Content copiaCell(int linha, int coluna){
			return this.matriz[linha][coluna].copiaConteudo();
	}
	public void colaCell(int linha,int coluna, Content cont){
		this.matriz[linha][coluna].colaConteudo(cont);
	}
}

	
